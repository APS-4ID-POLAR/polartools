name: Pytest and Flake8

on: [push]

defaults:
  run:
    shell: bash -l {0}

jobs:

  lint:
    name: Code style
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: |
          flake8

      - name: Run black
        uses: rickstaa/action-black@v1
        with:
          black_args: ". -l 80 --check"

  test-matrix:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
      max-parallel: 5

    steps:
      - uses: actions/checkout@v4
  
      - name: Create Python ${{ matrix.python-version }} environment
        uses: mamba-org/setup-micromamba@v1
        with:
          cache-environment: true
          cache-environment-key: env-key-${{ matrix.python-version }}
          condarc: |
            channel-priority: flexible
          environment-file: environment.yml
          environment-name: anaconda-test-env-py-${{ matrix.python-version }}
          create-args: >-
            python=${{ matrix.python-version }}

      - name: Initial diagnostics
        run: |
          micromamba info
          micromamba list
          conda config --show-sources
          conda config --show
          micromamba env list
          printenv | sort

      - name: Run pytest
        shell: bash -l {0}
        run: |
          databroker-unpack inplace polartools/tests/data_for_test/databroker data_3
          pytest --cov-config=.coveragerc --cov=./ --cov-report=xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          fail_ci_if_error: true
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
